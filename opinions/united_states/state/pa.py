#  Scraper for Pennsylvania Supreme Court
# CourtID: pa
# Court Short Name: pa
# Author: Andrei Chelaru
# Reviewer:
# Date created: 21 July 2014


from datetime import date
import re

from juriscraper.OpinionSite import OpinionSite


class Site(OpinionSite):
    def __init__(self):
        super(Site, self).__init__()
        self.court_id = self.__module__
        self.case_date = date.today()
        self.regex = re.compile("(.*)(?:, Nos\. |- Nos\. |- No\. |, No\. )(.*)")
        self.url = 'http://www.pacourts.us/courts/supreme-court/court-opinions/Default.aspx'
        self.parameters = {
            '__VIEWSTATE': "",
            'CourtType': "supreme",
            'PostingTypeSearch': ["mo", "oaj"],    # majority opinions, Opinion Announcing the Judgment of the Court
            'CaptionSearch': "",
            'AuthorSearch': "",
            'MinDateSearch': self.case_date.strftime('%m/%d%Y'),
            'MaxDateSearch': self.case_date.strftime('%m/%d%Y'),
            'MonthSearch': "0",
            'YearSearch': "",
            'SortOrder': "desc",
            'FormButton': "Search"
        }
        self.method = "POST"

    def _get_case_names(self):
        path = "//*[contains(concat(' ',@id,' '),' CaptionView')]/text()"
        return map(self._return_case_name, self.html.xpath(path))

    def _return_case_name(self, e):
        match = self.regex.search(e)
        return match.group(1)

    def _get_download_urls(self):
        path = "//*[contains(concat(' ',@id,' '),' FileView')]/a/@href"
        return list(self.html.xpath(path))

    def _get_case_dates(self):
        path = "//*[contains(concat(' ',@id,' '),' CaptionView')]"
        return [self.case_date] * len(self.html.xpath(path))

    def _get_precedential_statuses(self):
        return ['Published'] * len(self.case_names)

    def _get_docket_numbers(self):
        path = "//*[contains(concat(' ',@id,' '),' CaptionView')]/text()"
        return map(self._return_docket_number, self.html.xpath(path))

    def _return_docket_number(self, e):
        match = self.regex.search(e)
        return match.group(2)

    def _get_judges(self):
        path = "//*[contains(concat(' ',@id,' '),' AuthorView')]/text()"
        return list(self.html.xpath(path))