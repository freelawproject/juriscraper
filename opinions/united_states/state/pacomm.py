#  Scraper for Pennsylvania Commonwealth Court
# CourtID: pacomm
# Court Short Name: pacomm
# Author: Andrei Chelaru
# Reviewer:
# Date created: 21 July 2014

from juriscraper.opinions.united_states.state import pa
from datetime import date
import re


class Site(pa.Site):
    def __init__(self):
        super(Site, self).__init__()
        self.court_id = self.__module__
        self.regex = re.compile("(.*) - (\d+.*\d{4})")
        self.url = "http://www.pacourts.us/courts/commonwealth-court/court-opinions/Default.aspx"
        self.parameters = {
            '__VIEWSTATE': "",
            'CourtType': "commonwealth",
            'StatusSearch': "",
            'TypeSearch': ["complete", "mo", "opc", "sjo"],
            'CaptionSearch': "",
            'AuthorSearch': "",
            'MinDateSearch': self.case_date.strftime('%m/%d%Y'),
            'MaxDateSearch': self.case_date.strftime('%m/%d%Y'),
            'MonthSearch': "0",
            'YearSearch': "",
            'SortOrder': "desc",
            'FormButton': "Search"
        }

    def _get_precedential_statuses(self):
        # I don't know if this is correct
        path = "//*[contains(concat(' ',@id,' '),' StatusView')]/text()"
        return map(self._return_precedential_status, self.html.xpath(path))

    @staticmethod
    def _return_precedential_status(e):
        if e == 'Reported':
            return 'Published'
        else:
            return 'Unpublished'